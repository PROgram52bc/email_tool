#!/bin/bash

# On 1 argument
if test $# = 1; then 
	DATAFILE="./data/${1}.csv"
# On 2 arguments
elif test $# = 2; then 
	DATAFILE=$2
# On anything other amount of arguments
else echo "usage: $0 template_name [data/template_name.csv]"
	exit 
fi
OFOLDER="./letters/$1"
IFOLDER="./templates/$1"
IFS=,

if [ ! -d $IFOLDER ]; then echo $IFOLDER does not exist!; exit 1; fi
if [ ! -f $DATAFILE ]; then echo $DATAFILE does not exist!; exit 1; fi

# empty the output folder
if [ ! -d $OFOLDER ]; then
	mkdir -p $OFOLDER # make parent dir as well
else
	rm $OFOLDER/*
fi

read -a keyArr < $DATAFILE # read the 1st line to an array

sed '1d' $DATAFILE | while read -a valArr # read from 2nd line
do
	for i in ${!keyArr[@]}; do
		keyArr[$i]=${keyArr[$i]// /_}
		varArr[$i]=${varArr[$i]// /_}
		declare "${keyArr[$i]}"="${valArr[$i]}"
	done
	# Conditions for composing letters
	# if "num" is a valid number (eliminate unnecessary entries)
	if [[ ${num} =~ ^[0-9]+$ ]] &&
	# AND address is not empty 
		[ -n "$address" ] &&
	# AND name is not empty
		[ -n "$name" ]
	then
		echo composing for $num: $name
		#	DON'T INDENT START
		if [ "$is_eng" != y ]; then
eval "cat << EOF
$(<${IFOLDER}/zh.txt)
EOF" > ${OFOLDER}/${num}.txt
		else
eval "cat << EOF
$(<${IFOLDER}/en.txt)
EOF" > ${OFOLDER}/${num}.txt
		fi
		#	DON'T INDENT END
	fi
done
cp $DATAFILE $OFOLDER/data.csv
cp $IFOLDER/subject_en.txt $OFOLDER/subject_en.txt
cp $IFOLDER/subject_zh.txt $OFOLDER/subject_zh.txt
echo Letters composed! See $OFOLDER
